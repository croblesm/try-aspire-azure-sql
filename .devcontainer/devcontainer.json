// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/dotnet-mssql
{
	"name": "C# (.NET) and MS SQL",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspace",

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"workbench.colorTheme": "Atom One Dark",
				"mssql.connections": [
					{
						"server": "localhost,1433",
						"database": "master",
						"authenticationType": "SqlLogin",
						"user": "sa",
						"password": "P@ssw0rd!",
						"savePassword": true,
						"profileName": "LocalDev",
						"trustServerCertificate": true
					}
				],
				"sqlDatabaseProjects.dotnetSDK Location": "/usr/bin/"
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-dotnettools.csharp",
				"ms-mssql.mssql",
				"github.copilot",
				"github.vscode-pull-request-github",
				"github.codespaces",
				"ms-vscode.vscode-node-azure-pack",
				"ms-azuretools.vscode-docker",
				"github.vscode-github-actions",
				"hashicorp.terraform",
				"akamud.vscode-theme-onedark",
				"humao.rest-client"
			]
		}
	},
	"features": {
        "ghcr.io/devcontainers/features/azure-cli:1": {
            "version": "latest"
        },
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"version": "latest"
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5000, 5001, 1433],

	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Next, copy your certificate into the container:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"

	// postCreateCommand.sh parameters: $1=SA password, $2=dacpac path, $3=sql script(s) path
	// "postCreateCommand": "bash .devcontainer/mssql/postCreateCommand.sh 'P@ssw0rd!' './bin/Debug/' './.devcontainer/mssql/'",
	"postCreateCommand": "bash .devcontainer/mssql/postCreateCommand.sh 'P@ssw0rd!' './bin/Debug/' './.devcontainer/mssql/'",
	// "remoteEnv": {
	// 	"PATH": "${containerEnv:PATH}:/opt/mssql-tools/bin"
	// },
	"postStartCommand": "cd DAB-Config && dab start --config=dab.config.json"
}